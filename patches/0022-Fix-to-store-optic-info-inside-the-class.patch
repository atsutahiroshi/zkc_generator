From d0659c6f50dcfe0197540a5ed8bfd71e34bda0aa Mon Sep 17 00:00:00 2001
From: Hiroshi Atsuta <atsuta.hiroshi@gmail.com>
Date: Wed, 11 Oct 2017 13:53:10 +0200
Subject: [PATCH 22/41] Fix to store optic info inside the class

---
 src/RokiPlugin/RokiSimulatorItem.cpp | 10 ++++++++--
 1 file changed, 8 insertions(+), 2 deletions(-)

diff --git a/src/RokiPlugin/RokiSimulatorItem.cpp b/src/RokiPlugin/RokiSimulatorItem.cpp
index 0777e01..4f3b6df 100644
--- a/src/RokiPlugin/RokiSimulatorItem.cpp
+++ b/src/RokiPlugin/RokiSimulatorItem.cpp
@@ -148,7 +148,8 @@ public:
     float alpha() const { return alpha_; }
     const string& name() const { return name_; }
     void setName(const std::string& name);
-    void exportToZOpticalInfo(zOpticalInfo* opt);
+    const zOpticalInfo* get() const { return &opt_; }
+    zOpticalInfo* get() { return &opt_; }
 
 private:
     RokiOpticalInfo();
@@ -157,6 +158,7 @@ private:
     Vector3f amb_, dif_, spc_;
     float ns_, sns_, alpha_;
     string name_;
+    zOpticalInfo opt_;
 
     void visitGroup(SgGroup* group);
     void visitSwitch(SgSwitch* switchNode);
@@ -166,6 +168,7 @@ private:
 
     string createName();
     void scaleToRokiCompatible(SgMaterial *material);
+    void exportToZOpticalInfo(zOpticalInfo* opt);
 };
 
 
@@ -360,6 +363,8 @@ RokiOpticalInfo::RokiOpticalInfo(SgNode* node)
     visitors.setFunction<SgShape>(
         [&](SgShape* node){ visitShape(node); });
     visitors.updateDispatchTable();
+
+    zOpticalInfoInit(&opt_);
     visitors.dispatch(node);
 }
 
@@ -397,6 +402,7 @@ void RokiOpticalInfo::visitShape(SgShape* shape)
     SgMaterial* material = shape->material();
     if(material){
         scaleToRokiCompatible(material);
+        exportToZOpticalInfo(&opt_);
     }
 }
 
@@ -1230,7 +1236,7 @@ void RokiBody::exportAsZkcFile(const std::string& filename)
     zArrayAlloc(&rkChainShape(chain)->optic, zOpticalInfo, opticList.num());
     for(int i=0; i<opticList.num(); ++i){
         zOpticalInfo *target = zMShape3DOptic(rkChainShape(chain), i);
-        opticList.get(i).exportToZOpticalInfo(target);
+        zOpticalInfoClone(opticList.get(i).get(), target);
     }
 
     // find all shapes
-- 
2.7.4

