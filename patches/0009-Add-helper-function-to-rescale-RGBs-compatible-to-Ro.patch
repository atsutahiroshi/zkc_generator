From 9ec654f0341537cf260857d8af5f046efe9f3ebf Mon Sep 17 00:00:00 2001
From: Hiroshi Atsuta <atsuta.hiroshi@gmail.com>
Date: Mon, 9 Oct 2017 15:00:24 +0200
Subject: [PATCH 09/41] Add helper function to rescale RGBs compatible to Roki

---
 src/RokiPlugin/RokiSimulatorItem.cpp | 50 ++++++++++++++++++++++--------------
 1 file changed, 31 insertions(+), 19 deletions(-)

diff --git a/src/RokiPlugin/RokiSimulatorItem.cpp b/src/RokiPlugin/RokiSimulatorItem.cpp
index 415b11d..7fde34a 100644
--- a/src/RokiPlugin/RokiSimulatorItem.cpp
+++ b/src/RokiPlugin/RokiSimulatorItem.cpp
@@ -144,7 +144,11 @@ public:
     void exportToZOpticalInfo(zOpticalInfo* opt);
 
 private:
-    string createName(Vector3f amb, Vector3f dif, Vector3f spc, float ns, float sns, float alpha);
+    Vector3f amb_, dif_, spc_;
+    float ns_, sns_, alpha_;
+
+    void scaleToRokiCompatible();
+    string createName();
 };
 
 
@@ -303,18 +307,21 @@ enum{ FD_SOLVER_VERT, FD_SOLVER_VOLUME };
 
 RokiOpticalInfo::RokiOpticalInfo()
 {
+    scaleToRokiCompatible();
 }
 
 
 RokiOpticalInfo::RokiOpticalInfo(const RokiOpticalInfo& org)
     : SgMaterial(org)
 {
+    scaleToRokiCompatible();
 }
 
 
 RokiOpticalInfo::RokiOpticalInfo(const SgMaterial& org)
     : SgMaterial(org)
 {
+    scaleToRokiCompatible();
 }
 
 
@@ -337,16 +344,27 @@ bool RokiOpticalInfo::operator!=(const RokiOpticalInfo& other) const
 }
 
 
-string RokiOpticalInfo::createName(Vector3f amb, Vector3f dif, Vector3f spc, float ns, float sns, float alpha)
+void RokiOpticalInfo::scaleToRokiCompatible()
+{
+    amb_ = diffuseColor() * ambientIntensity();
+    dif_ = diffuseColor();
+    spc_ = specularColor();
+    ns_  = 1.0;
+    sns_ = (127.0f * shininess()) + 1.0f;
+    alpha_ = 1.0 - transparency();
+}
+
+
+string RokiOpticalInfo::createName()
 {
+    Vector3f amb = amb_ * 255.0f;
+    Vector3f dif = dif_ * 255.0f;
+    Vector3f spc = spc_ * 255.0f;
+    float ns = ns_ * 255.0f;
+    float sns = sns_;
+    float alpha = alpha_ * 255.0f;
     char name[256];
 
-    amb *= 255.0f;
-    dif *= 255.0f;
-    spc *= 255.0f;
-    ns  *= 255.0f;
-    // sns *= 255.0f;
-    alpha *= 255.0f;
     sprintf(name, "#%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x",
             (int)amb[0], (int)amb[1], (int)amb[2],
             (int)dif[0], (int)dif[1], (int)dif[2],
@@ -359,19 +377,13 @@ string RokiOpticalInfo::createName(Vector3f amb, Vector3f dif, Vector3f spc, flo
 
 void RokiOpticalInfo::exportToZOpticalInfo(zOpticalInfo* opt)
 {
-    Vector3f amb = diffuseColor() * ambientIntensity();
-    Vector3f dif = diffuseColor();
-    Vector3f spc = specularColor();
-    float ns  = 1.0;
-    float sns = (127.0f * shininess()) + 1.0f;
-    float alpha = 1.0 - transparency();
-    string name = createName(amb, dif, spc, ns, sns, alpha);
+    string name = createName();
 
     zOpticalInfoCreate(opt,
-                       amb[0], amb[1], amb[2],
-                       dif[0], dif[1], dif[2],
-                       spc[0], spc[1], spc[2],
-                       ns, sns, alpha,
+                       amb_[0], amb_[1], amb_[2],
+                       dif_[0], dif_[1], dif_[2],
+                       spc_[0], spc_[1], spc_[2],
+                       ns_, sns_, alpha_,
                        (char *)name.c_str());
 }
 
-- 
2.7.4

