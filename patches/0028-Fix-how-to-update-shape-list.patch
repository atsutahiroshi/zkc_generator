From a95fdd076babd22d52cf33b9ee94219179624602 Mon Sep 17 00:00:00 2001
From: Hiroshi Atsuta <atsuta.hiroshi@gmail.com>
Date: Thu, 12 Oct 2017 11:09:57 +0200
Subject: [PATCH 28/41] Fix how to update shape list

---
 src/RokiPlugin/RokiSimulatorItem.cpp | 65 ++++++++++++++++++++++++++++++++----
 1 file changed, 58 insertions(+), 7 deletions(-)

diff --git a/src/RokiPlugin/RokiSimulatorItem.cpp b/src/RokiPlugin/RokiSimulatorItem.cpp
index 243f75f..0ea403f 100644
--- a/src/RokiPlugin/RokiSimulatorItem.cpp
+++ b/src/RokiPlugin/RokiSimulatorItem.cpp
@@ -281,13 +281,21 @@ public:
     void setKinematicStateToRoki(zVec dis, int k);
     void setTorqueToRoki();
 
+    void updateColShapeList();
+    void updateVisShapeList();
     void switchToColShape();
     void switchToVisShape();
 
 private:
+    typedef struct {
+        int num;
+        zShapeListCell *head, *tail;
+    } ListSet;
+    ListSet colListSet, visListSet;
+    void updateListSet(ListSet *listSet, zShapeList *list);
+    void overwriteList(zShapeList *list, ListSet *listSet);
     zShapeList colShapeList;
     zShapeList visShapeList;
-    void overwriteListRoot(zShapeList* old, zShapeList* novel);
 };
 typedef ref_ptr<RokiLink> RokiLinkPtr;
 
@@ -1320,23 +1328,66 @@ void RokiLink::setTorqueToRoki()
 }
 
 
-void RokiLink::overwriteListRoot(zShapeList* old, zShapeList* novel)
+void RokiLink::updateListSet(ListSet *listSet, zShapeList *list)
 {
-    zListSetNum(old, zListNum(novel));
-    zListCellSetPrev(zListRoot(old), zListHead(novel));
-    zListCellSetNext(zListRoot(old), zListTail(novel));
+    listSet->num = zListNum(list);
+    listSet->tail = zListHead(list);
+    listSet->head = zListTail(list);
+}
+
+
+void RokiLink::overwriteList(zShapeList *list, ListSet *listSet)
+{
+    zShapeListCell *cp;
+    cout << "==============" << endl;
+    cout << "number = " << zListNum(list) << endl;
+    cout << "root: " <<zListRoot(list) << endl;
+    for(int i=0; i<zListNum(list); ++i){
+        zListItem(list, i, &cp);
+        cout << "<" << i << ">";
+        cout << "cell [" << cp << "] ";
+        cout << zListCellPrev(cp) << " <- prev | next-> "
+             << zListCellNext(cp) << endl;
+    }
+
+    zListSetNum(list, listSet->num);
+    zListCellSetPrev(zListRoot(list), listSet->head);
+    zListCellSetNext(zListRoot(list), listSet->tail);
+
+    cout << "---------------" << endl;
+    cout << "number = " << zListNum(list) << endl;
+    cout << "root: " <<zListRoot(list) << endl;
+    for(int i=0; i<zListNum(list); ++i){
+        zListItem(list, i, &cp);
+        cout << "<" << i << ">";
+        cout << "cell [" << cp << "] ";
+        cout << zListCellPrev(cp) << " <- prev | next-> "
+             << zListCellNext(cp) << endl;
+    }
+}
+
+
+void RokiLink::updateColShapeList()
+{
+    updateListSet(&colListSet, rkLinkShapeList(rklink));
+}
+
+
+void RokiLink::updateVisShapeList()
+{
+    updateListSet(&visListSet, rkLinkShapeList(rklink));
 }
 
 
 void RokiLink::switchToColShape()
 {
-    overwriteListRoot(rkLinkShapeList(rklink), &colShapeList);
+    overwriteList(rkLinkShapeList(rklink), &colListSet);
 }
 
 
 void RokiLink::switchToVisShape()
 {
-    overwriteListRoot(rkLinkShapeList(rklink), &visShapeList);
+    overwriteList(rkLinkShapeList(rklink), &visListSet);
 }
 
 
-- 
2.7.4

